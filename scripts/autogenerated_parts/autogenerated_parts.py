import openpyxl

SOURCE_FILE = "autogenerated_parts.xlsx"
OUTPUT_FILE = (
    "C:\\Users\\Dan\\Documents\\kicad_wut\\kicad_libraries\\Auto_Library_WUT.kicad_sym"
)


def add_base_inductor(library):
    library.write(
        """  (symbol "L" (pin_numbers hide) (pin_names hide) (in_bom yes) (on_board yes)
    (property "Reference" "L" (at -1.27 0 0)
      (effects (font (size 1.27 1.27)))
    )
    (property "Value" "" (at 2.54 0 0)
      (effects (font (size 1.27 1.27)))
    )
    (property "Footprint" "" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Datasheet" "" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (symbol "L_0_1"
      (arc (start 0 -2.54) (mid 0.6323 -1.905) (end 0 -1.27)
        (stroke (width 0) (type default))
        (fill (type none))
      )
      (arc (start 0 -1.27) (mid 0.6323 -0.635) (end 0 0)
        (stroke (width 0) (type default))
        (fill (type none))
      )
      (arc (start 0 0) (mid 0.6323 0.635) (end 0 1.27)
        (stroke (width 0) (type default))
        (fill (type none))
      )
      (arc (start 0 1.27) (mid 0.6323 1.905) (end 0 2.54)
        (stroke (width 0) (type default))
        (fill (type none))
      )
    )
    (symbol "L_1_1"
      (pin passive line (at 0 3.81 270) (length 1.27)
        (name "1" (effects (font (size 1.27 1.27))))
        (number "1" (effects (font (size 1.27 1.27))))
      )
      (pin passive line (at 0 -3.81 90) (length 1.27)
        (name "2" (effects (font (size 1.27 1.27))))
        (number "2" (effects (font (size 1.27 1.27))))
      )
    )
  )
"""
    )


def add_inductor(
    library,
    manufacturer,
    mpn,
    value,
    package_description,
    footprint,
    height,
    tolerance,
    datasheet,
):
    library.write(
        f"""
  (symbol "{manufacturer} {mpn}" (extends "L")
    (property "Reference" "L" (at 2.54 2.54 0)
      (effects (font (size 1.27 1.27)) (justify left))
    )
    (property "Value" "{value}" (at 2.54 0 0)
      (effects (font (size 1.27 1.27)) (justify left))
    )
    (property "Footprint" "{footprint}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Datasheet" "{datasheet}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Manufacturer" "{manufacturer}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "MPN" "{mpn}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Tolerance" "{tolerance}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Height" "{height}mm" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "ki_description" "{value} +-{tolerance} {package_description} Inductor" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
  )
"""
    )


def add_base_capacitor(library):
    library.write(
        """  (symbol "C" (pin_numbers hide) (pin_names (offset 0)) (in_bom yes) (on_board yes)
    (property "Reference" "C" (at 2.54 2.54 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27)) (justify left))
    )
    (property "Value" "" (at 2.54 0 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27)) (justify left))
    )
    (property "Footprint" "" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Datasheet" "" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Voltage" "" (at 2.54 -2.54 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27) (color 0 100 100 1)) (justify left))
    )
    (symbol "C_0_1"
      (polyline
        (pts
          (xy -2.032 -0.762)
          (xy 2.032 -0.762)
        )
        (stroke (width 0.508) (type default))
        (fill (type none))
      )
      (polyline
        (pts
          (xy -2.032 0.762)
          (xy 2.032 0.762)
        )
        (stroke (width 0.508) (type default))
        (fill (type none))
      )
    )
    (symbol "C_1_1"
      (pin passive line (at 0 3.81 270) (length 2.794)
        (name "~" (effects (font (size 1.27 1.27))))
        (number "1" (effects (font (size 1.27 1.27))))
      )
      (pin passive line (at 0 -3.81 90) (length 2.794)
        (name "~" (effects (font (size 1.27 1.27))))
        (number "2" (effects (font (size 1.27 1.27))))
      )
    )
  )
"""
    )


def add_capacitor(
    library,
    manufacturer,
    mpn,
    value,
    package_description,
    footprint,
    height,
    tolerance,
    datasheet,
    voltage,
    dielectric,
):
    library.write(
        f"""
  (symbol "{manufacturer} {mpn}" (extends "C")
    (property "Reference" "C" (at 2.54 2.54 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27)) (justify left))
    )
    (property "Value" "{value}" (at 2.54 0 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27)) (justify left))
    )
    (property "Footprint" "{footprint}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Datasheet" "{datasheet}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Voltage" "{voltage}" (at 2.54 -2.54 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27) (color 0 100 100 1)) (justify left))
    )
    (property "Manufacturer" "{manufacturer}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "MPN" "{mpn}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Tolerance" "{tolerance}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Dielectric" "{dielectric}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Height" "{height}mm" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "ki_description" "{value} +-{tolerance} {voltage} {package_description} {dielectric} Capacitor" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
  )
"""
    )


def add_base_zener(library):
    library.write(
        """
  (symbol "ZD" (pin_numbers hide) (pin_names (offset 1.016) hide) (in_bom yes) (on_board yes)
    (property "Reference" "ZD" (at 0 2.54 0)
      (effects (font (size 1.27 1.27)))
    )
    (property "Value" "ZD" (at 0 -2.54 0)
      (effects (font (size 1.27 1.27)))
    )
    (property "Footprint" "" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Datasheet" "" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "ki_keywords" "diode" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "ki_description" "Zener diode" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (symbol "ZD_0_1"
      (polyline
        (pts
          (xy 1.27 0)
          (xy -1.27 0)
        )
        (stroke (width 0) (type default))
        (fill (type none))
      )
      (polyline
        (pts
          (xy -1.27 -1.27)
          (xy -1.27 1.27)
          (xy -0.762 1.27)
        )
        (stroke (width 0.254) (type default))
        (fill (type none))
      )
      (polyline
        (pts
          (xy 1.27 -1.27)
          (xy 1.27 1.27)
          (xy -1.27 0)
          (xy 1.27 -1.27)
        )
        (stroke (width 0.254) (type default))
        (fill (type none))
      )
    )
    (symbol "ZD_1_1"
      (pin passive line (at -3.81 0 0) (length 2.54)
        (name "K" (effects (font (size 1.27 1.27))))
        (number "1" (effects (font (size 1.27 1.27))))
      )
      (pin passive line (at 3.81 0 180) (length 2.54)
        (name "A" (effects (font (size 1.27 1.27))))
        (number "2" (effects (font (size 1.27 1.27))))
      )
    )
  )"""
    )


def add_zener(
    library,
    manufacturer,
    mpn,
    value,
    package_description,
    footprint,
    height,
    datasheet,
):
    library.write(
        f"""
  (symbol "{manufacturer} {mpn}" (extends "ZD")
    (property "Reference" "ZD" (at 2.54 2.54 0)
      (effects (font (size 1.27 1.27)) (justify left))
    )
    (property "Value" "{value}" (at 2.54 0 0)
      (effects (font (size 1.27 1.27)) (justify left))
    )
    (property "Footprint" "{footprint}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Datasheet" "{datasheet}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Manufacturer" "{manufacturer}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "MPN" "{mpn}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Height" "{height}mm" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "ki_description" "{value} {package_description} Zener Diode" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
  )
"""
    )


def add_base_polarised_capacitor(library):
    library.write(
        """  (symbol "C_Pol" (pin_numbers hide) (pin_names hide) (in_bom yes) (on_board yes)
    (property "Reference" "C" (at 2.54 2.54 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27)) (justify left))
    )
    (property "Value" "" (at 2.54 0 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27)) (justify left))
    )
    (property "Footprint" "" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Datasheet" "" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Voltage" "50V" (at 2.54 -2.54 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27) (color 0 100 100 1)) (justify left))
    )
    (property "Manufacturer" "" (at 0 0 0)
      (effects (font (size 1.27 1.27)))
    )
    (property "MPN" "" (at 0 0 0)
      (effects (font (size 1.27 1.27)))
    )
    (symbol "C_Pol_0_1"
      (rectangle (start -2.286 0.508) (end 2.286 1.016)
        (stroke (width 0) (type default))
        (fill (type none))
      )
      (polyline
        (pts
          (xy -1.778 2.286)
          (xy -0.762 2.286)
        )
        (stroke (width 0) (type default))
        (fill (type none))
      )
      (polyline
        (pts
          (xy -1.27 2.794)
          (xy -1.27 1.778)
        )
        (stroke (width 0) (type default))
        (fill (type none))
      )
      (rectangle (start 2.286 -0.508) (end -2.286 -1.016)
        (stroke (width 0) (type default))
        (fill (type outline))
      )
    )
    (symbol "C_Pol_1_1"
      (pin passive line (at 0 3.81 270) (length 2.794)
        (name "~" (effects (font (size 1.27 1.27))))
        (number "1" (effects (font (size 1.27 1.27))))
      )
      (pin passive line (at 0 -3.81 90) (length 2.794)
        (name "~" (effects (font (size 1.27 1.27))))
        (number "2" (effects (font (size 1.27 1.27))))
      )
    )
  )"""
    )


def add_polarised_capacitor(
    library,
    manufacturer,
    mpn,
    value,
    package_description,
    footprint,
    tolerance,
    height,
    datasheet,
    voltage,
    dielectric,
):
    library.write(
        f"""  (symbol "{manufacturer}_{mpn}" (extends "C_Pol")
    (property "Reference" "C" (at 2.54 2.54 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27)) (justify left))
    )
    (property "Value" "{value}" (at 2.54 0 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27)) (justify left))
    )
    (property "Footprint" "{footprint}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Datasheet" "{datasheet}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Voltage" "{voltage}" (at 2.54 -2.54 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27) (color 0 72 72 1)) (justify left))
    )
    (property "Manufacturer" "{manufacturer}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "MPN" "{mpn}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Tolerance" "{tolerance}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Dielectric" "{dielectric}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Height" "{height}mm" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "ki_description" "{value} +-{tolerance} {voltage} {package_description} {dielectric} Capacitor" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
  )"""
    )


def add_base_led(library):
    library.write(
        """  (symbol "LED" (pin_numbers hide) (pin_names hide) (in_bom yes) (on_board yes)
    (property "Reference" "LD" (at 0 2.54 0)
      (effects (font (size 1.27 1.27)))
    )
    (property "Value" "LED" (at 0 -2.54 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27)))
    )
    (property "Footprint" "" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Datasheet" "" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (symbol "LED_0_1"
      (polyline
        (pts
          (xy 1.27 0)
          (xy -1.27 0)
        )
        (stroke (width 0) (type default))
        (fill (type none))
      )
      (polyline
        (pts
          (xy 1.27 1.27)
          (xy 1.27 -1.27)
        )
        (stroke (width 0.254) (type default))
        (fill (type none))
      )
      (polyline
        (pts
          (xy -1.27 1.27)
          (xy -1.27 -1.27)
          (xy 1.27 0)
          (xy -1.27 1.27)
        )
        (stroke (width 0.254) (type default))
        (fill (type none))
      )
      (polyline
        (pts
          (xy 1.778 0.762)
          (xy 3.302 2.286)
          (xy 2.54 2.286)
          (xy 3.302 2.286)
          (xy 3.302 1.524)
        )
        (stroke (width 0) (type default))
        (fill (type none))
      )
      (polyline
        (pts
          (xy 3.048 0.762)
          (xy 4.572 2.286)
          (xy 3.81 2.286)
          (xy 4.572 2.286)
          (xy 4.572 1.524)
        )
        (stroke (width 0) (type default))
        (fill (type none))
      )
    )
    (symbol "LED_1_1"
      (pin passive line (at 3.81 0 180) (length 2.54)
        (name "K" (effects (font (size 1.27 1.27))))
        (number "1" (effects (font (size 1.27 1.27))))
      )
      (pin passive line (at -3.81 0 0) (length 2.54)
        (name "A" (effects (font (size 1.27 1.27))))
        (number "2" (effects (font (size 1.27 1.27))))
      )
    )
  )"""
    )


def add_led(
    library, manufacturer, mpn, value, package_description, footprint, height, datasheet
):
    library.write(
        f"""  (symbol "{manufacturer}_{mpn}" (extends "LED")
    (property "Reference" "LD" (at 0 2.54 0)
      (effects (font (size 1.27 1.27)))
    )
    (property "Value" "{value}" (at 0 -2.54 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27)))
    )
    (property "Footprint" "{footprint}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Datasheet" "{datasheet}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Manufacturer" "{manufacturer}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "MPN" "{mpn}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "ki_description" "{value} {package_description} LED" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
  )"""
    )


def add_base_resistor(library):
    library.write(
        """    
  (symbol "R" (pin_numbers hide) (pin_names (offset 0)) (in_bom yes) (on_board yes)
    (property "Reference" "R" (at 2.032 0 90)
      (effects (font (size 1.27 1.27)))
    )
    (property "Value" "" (at 0 0 90)
      (effects (font (size 1.27 1.27)))
    )
    (property "Footprint" "" (at -1.778 0 90)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Manufacturer" "" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Tolerance" "" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "ki_keywords" "R res resistor" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "ki_description" "Generic Resistor Symbol" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (symbol "R_0_1"
      (rectangle (start -1.016 -2.54) (end 1.016 2.54)
        (stroke (width 0.254) (type default))
        (fill (type none))
      )
    )
    (symbol "R_1_1"
      (pin passive line (at 0 3.81 270) (length 1.27)
        (name "~" (effects (font (size 1.27 1.27))))
        (number "1" (effects (font (size 1.27 1.27))))
      )
      (pin passive line (at 0 -3.81 90) (length 1.27)
        (name "~" (effects (font (size 1.27 1.27))))
        (number "2" (effects (font (size 1.27 1.27))))
      )
    )
  )"""
    )


def add_resistor(
    library,
    manufacturer,
    mpn,
    value,
    package_description,
    footprint,
    height,
    tolerance,
    datasheet,
):
    library.write(
        f"""    
  (symbol "{manufacturer} {mpn}" (extends "R")
    (property "Reference" "R" (at 2.032 0 90)
      (effects (font (size 1.27 1.27)))
    )
    (property "Value" "{value}" (at 0 0 90)
      (effects (font (size 1.27 1.27)))
    )
    (property "MPN" "{mpn}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Footprint" "{footprint}" (at -1.778 0 90)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Manufacturer" "{manufacturer}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Tolerance" "{tolerance}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Datasheet" "{datasheet}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Height" "{height}mm" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "ki_description" "{value} +-{tolerance} {package_description} Resistor" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
  )"""
    )


with open(OUTPUT_FILE, "w+") as library:
    workbook = openpyxl.load_workbook(SOURCE_FILE)
    worksheet = workbook.active
    library.write(
        "(kicad_symbol_lib (version 20220914) (generator kicad_symbol_editor)\n"
    )
    add_base_inductor(library)
    add_base_capacitor(library)
    add_base_zener(library)
    add_base_polarised_capacitor(library)
    add_base_led(library)
    add_base_resistor(library)

    for line in worksheet.values:
        (
            base_symbol,
            manufacturer,
            mpn,
            value,
            package_description,
            footprint,
            height,
            tolerance,
            datasheet,
            voltage,
            dielectric,
        ) = line

        if base_symbol == "Base Symbol":
            # Header row
            continue

        if package_description == "201":
            package_description = "201"
        if package_description == "402":
            package_description = "0402"
        if package_description == "603":
            package_description = "0603"
        if package_description == "805":
            package_description = "0805"

        if base_symbol == "C":
            add_capacitor(
                library=library,
                manufacturer=manufacturer,
                mpn=mpn,
                value=value,
                package_description=package_description,
                footprint=footprint,
                height=height,
                tolerance=tolerance,
                datasheet=datasheet,
                voltage=voltage,
                dielectric=dielectric,
            )
        elif base_symbol == "L":
            add_inductor(
                library=library,
                manufacturer=manufacturer,
                mpn=mpn,
                value=value,
                package_description=package_description,
                footprint=footprint,
                height=height,
                tolerance=tolerance,
                datasheet=datasheet,
            )
        elif base_symbol == "ZD":
            add_zener(
                library=library,
                manufacturer=manufacturer,
                mpn=mpn,
                value=value,
                package_description=package_description,
                footprint=footprint,
                height=height,
                datasheet=datasheet,
            )
        elif base_symbol == "CP":
            add_polarised_capacitor(
                library=library,
                manufacturer=manufacturer,
                mpn=mpn,
                value=value,
                package_description=package_description,
                footprint=footprint,
                height=height,
                tolerance=tolerance,
                datasheet=datasheet,
                voltage=voltage,
                dielectric=dielectric,
            )
        elif base_symbol == "LED":
            add_led(
                library=library,
                manufacturer=manufacturer,
                mpn=mpn,
                value=value,
                package_description=package_description,
                footprint=footprint,
                height=height,
                datasheet=datasheet,
            )
        elif base_symbol == "R":
            add_resistor(
                library=library,
                manufacturer=manufacturer,
                mpn=mpn,
                value=value,
                package_description=package_description,
                footprint=footprint,
                height=height,
                tolerance=tolerance,
                datasheet=datasheet,
            )

        else:
            raise NotImplementedError
    library.write(")")
