SOURCE_CSV = "autogenerated_capacitors.csv"
OUTPUT_FILE = "C:\\Users\\Dan\\Documents\\kicad_wut\\kicad_libraries\\Capacitor_Auto_WUT.kicad_sym"


def add_symbol(
    manufacturer, mpn, value, footprint, datasheet, voltage, tolerance, height
):
    STANDARD_FOOTPRINTS = {
        "0402": "Capacitor_SMD:C_0402_1005Metric",
        "0603": "Capacitor_SMD:C_0603_1608Metric",
        "0805": "Capacitor_SMD:C_0805_2015Metric",
        "1206": "Capacitor_SMD:C_1206_3216Metric",
    }
    return f"""
  (symbol "{manufacturer} {mpn}" (extends "C")
    (property "Reference" "C" (at 2.54 2.54 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27)) (justify left))
    )
    (property "Value" "{value}" (at 2.54 0 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27)) (justify left))
    )
    (property "Footprint" "{STANDARD_FOOTPRINTS[footprint]}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Datasheet" "{datasheet}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Voltage" "{voltage}" (at 2.54 -2.54 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27) (color 0 100 100 1)) (justify left))
    )
    (property "Manufacturer" "{manufacturer}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "MPN" "{mpn}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Tolerance" "{tolerance}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Dielectric" "{dielectric}" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Height" "{height}mm" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "ki_description" "{value} {footprint} {dielectric} {voltage} +-{tolerance} Capacitor" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
  )
"""


with open(SOURCE_CSV) as file, open(OUTPUT_FILE, "w+") as library:
    library.write(
        """(kicad_symbol_lib (version 20220914) (generator kicad_symbol_editor)
  (symbol "C" (pin_numbers hide) (pin_names (offset 0)) (in_bom yes) (on_board yes)
    (property "Reference" "C" (at 2.54 2.54 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27)) (justify left))
    )
    (property "Value" "" (at 2.54 0 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27)) (justify left))
    )
    (property "Footprint" "" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Datasheet" "" (at 0 0 0)
      (effects (font (size 1.27 1.27)) hide)
    )
    (property "Voltage" "" (at 2.54 -2.54 0) (do_not_autoplace)
      (effects (font (size 1.27 1.27) (color 0 100 100 1)) (justify left))
    )
    (symbol "C_0_1"
      (polyline
        (pts
          (xy -2.032 -0.762)
          (xy 2.032 -0.762)
        )
        (stroke (width 0.508) (type default))
        (fill (type none))
      )
      (polyline
        (pts
          (xy -2.032 0.762)
          (xy 2.032 0.762)
        )
        (stroke (width 0.508) (type default))
        (fill (type none))
      )
    )
    (symbol "C_1_1"
      (pin passive line (at 0 3.81 270) (length 2.794)
        (name "~" (effects (font (size 1.27 1.27))))
        (number "1" (effects (font (size 1.27 1.27))))
      )
      (pin passive line (at 0 -3.81 90) (length 2.794)
        (name "~" (effects (font (size 1.27 1.27))))
        (number "2" (effects (font (size 1.27 1.27))))
      )
    )
  )
"""
    )

    file.readline()  # Remove headers
    for line in file:
        (
            manufacturer,
            mpn,
            value,
            footprint,
            height,
            voltage,
            tolerance,
            dielectric,
            datasheet,
        ) = [x.strip() for x in line.split(",")]
        library.write(
            add_symbol(
                manufacturer=manufacturer,
                mpn=mpn,
                value=value,
                footprint=footprint,
                datasheet=datasheet,
                voltage=voltage,
                tolerance=tolerance,
                height=height,
            )
        )
    library.write(")")
